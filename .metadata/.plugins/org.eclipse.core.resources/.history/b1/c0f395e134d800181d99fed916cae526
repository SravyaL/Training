package com.taragani;

import static org.assertj.core.api.Assertions.assertThat;
import static org.hamcrest.CoreMatchers.any;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.verifyNoMoreInteractions;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.put;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.data.convert.ThreeTenBackPortConverters.LocalDateTimeToJavaTimeInstantConverter;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.taragani.TestUtil.TestUtil;
import com.taragani.model.Plan;
import com.taragani.service.PlanApi;
import com.taragani.service.PlanService;




@RunWith(SpringRunner.class)
@WebMvcTest(controllers = PlanApi.class)

public class PlanApiTest {

	private MockMvc mockMvc;

	@Autowired
	private WebApplicationContext webApplicationContext;

	@MockBean
	private PlanService planServiceMock;

	@Before
	public void setUp() {
		mockMvc = MockMvcBuilders.webAppContextSetup(webApplicationContext).build();
	}

	@After
	public void tearDown() {
		mockMvc = null;
	}

	@Test
	public void testGetAllPlans() throws Exception {
		assertThat(this.planServiceMock).isNotNull();

		List<Plan> planList = new ArrayList<>();
		planList.add(new Plan());

		when(planServiceMock.getAllPlans()).thenReturn(planList);

		mockMvc.perform(get("/plans")).andExpect(status().isOk()).andDo(print());

	}

	@Test
	public void testGetPlansBySpeed() throws Exception {
		assertThat(this.planServiceMock).isNotNull();
		int pSpeed = 40 ;
	

		List<Plan> planAdded = new ArrayList<>();
		planAdded.add(new Plan());

		
		when(planServiceMock.getPlansBySpeed(pSpeed)).thenReturn(planAdded);

		mockMvc.perform(get("/speed/40")).andExpect(status().isOk()).andDo(print());

	}

//	@Test
//	public void testGetAllEmployeess() throws Exception {
//		assertThat(this.empServiceMock).isNotNull();
//
//		List<Employee> empList = new ArrayList<>();
//		empList.add(new Employee());
//
//		when(empServiceMock.getAllEmployees()).thenReturn(empList);
//
//		mockMvc.perform(get("/Employees/empName/Aditya")).andExpect(status().isOk()).andDo(print());
//
//	}
//
//	@Test
//	public void testAddEmployee() throws Exception {
//		assertThat(this.empServiceMock).isNotNull();
//
//		Employee emp = new Employee();
//
//		emp.setEmpName("Raima");
//		emp.setBasic(8977);
//		emp.setHra(45);
//		emp.setDateOfJoining(null);
//		emp.setDept(Department.HR);
//
//		Employee planAdded = new Employee();
//		planAdded.setEmpId(14);
//		planAdded.setEmpName("Raima");
//		planAdded.setBasic(8977);
//		planAdded.setHra(45);
//		planAdded.setDateOfJoining(null);
//		planAdded.setDept(Department.HR);
//
//		System.out.println(emp);
//
//		when(empServiceMock.addEmployee(Mockito.any(Employee.class))).thenReturn(planAdded);
//
//		mockMvc.perform(post("/Employees").contentType(TestUtil.APPLICATION_JSON_UTF8)
//				.content(TestUtil.convertObjectToJsonBytes(emp))).andDo(print()).andExpect(status().isOk())
//				.andExpect(content().contentType(TestUtil.APPLICATION_JSON_UTF8));
//
//	}
//
//	@Test
//	public void testUpdateEmployee() throws Exception {
//		assertThat(this.empServiceMock).isNotNull();
//
//		Employee emp = new Employee();
//		emp.setEmpId(13);
//		emp.setEmpName("RaimaBaby");
//		emp.setBasic(8977);
//		emp.setHra(45);
//		emp.setDateOfJoining(null);
//		emp.setDept(Department.Network);
//
//		int empId = 13;
//		
//
//		Employee planAdded = new Employee();
//
//		planAdded.setEmpId(13);
//		planAdded.setEmpName("Aditya");
//		planAdded.setBasic(8977);
//		planAdded.setHra(45);
//		planAdded.setDateOfJoining(LocalDate.of(2018, 10, 17));
//		planAdded.setDept(Department.HR);
//
//		when(empServiceMock.getEmployeeById(empId)).thenReturn(planAdded);
//
//		when(empServiceMock.updateEmployee(Mockito.any(Employee.class))).thenReturn(emp);
//
//		mockMvc.perform(put("/Employees").contentType(TestUtil.APPLICATION_JSON_UTF8)
//				.content(TestUtil.convertObjectToJsonBytes(emp))).andDo(print()).andExpect(status().isOk())
//				.andExpect(content().contentType(TestUtil.APPLICATION_JSON_UTF8));
//
//
//	}
//
//	@Test
//	public void testDeleteEmployee() throws Exception {
//		assertThat(this.empServiceMock).isNotNull();
//
//		int empId = 10;
//
//		when(empServiceMock.deleteEmployee(empId)).thenReturn(true);
//
//		mockMvc.perform(delete("/Employees/10")).andExpect(status().isOk()).andDo(print());
//
//	}

}
